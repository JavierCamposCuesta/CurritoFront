{"ast":null,"code":"import { HttpRequest } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let addAnuncioService = /*#__PURE__*/(() => {\n  class addAnuncioService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.baseUrl;\n    }\n    /**\n       * Método para registrar usuarios, recibe un usuario y lanza la peticion a la API\n       * @param user\n       * @returns Un observable con el resultado de la petición\n       */\n    //  addAnuncio(anuncio:Anuncio){\n    //     const url = `${this.baseUrl}/anuncio`;\n    //     const headers = new HttpHeaders()\n    //       .set('Authorization', `Bearer ${localStorage.getItem('jwt')}` || '' );\n    //       return this.http.post(url, anuncio, {headers});\n    //   }\n\n\n    upload(file) {\n      // Crear formdata y agregar los datos a formdataz\n      let formData = new FormData();\n      formData.append(\"file\", file); // Crea el objeto HttpRequest original\n      // Establezca reportProgress en true para monitorear los eventos de carga de archivos\n\n      const req = new HttpRequest('POST', `${environment.baseUrl}/files`, formData, {\n        reportProgress: true,\n        responseType: 'json'\n      });\n      console.log(formData);\n      return this.http.request(req);\n    }\n\n  }\n\n  addAnuncioService.ɵfac = function addAnuncioService_Factory(t) {\n    return new (t || addAnuncioService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  addAnuncioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: addAnuncioService,\n    factory: addAnuncioService.ɵfac,\n    providedIn: 'root'\n  });\n  return addAnuncioService;\n})();","map":null,"metadata":{},"sourceType":"module"}