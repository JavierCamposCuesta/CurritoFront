{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/login.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = [\"miFormulario\"];\n\nfunction LoginComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \" Introduce un correo electr\\u00F3nico v\\u00E1lido \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \" La contrase\\u00F1a es requerida \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \" Usuario o Contrase\\u00F1a incorrecto \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c1 = function () {\n  return [\"/register\"];\n};\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(router, loginService) {\n      this.router = router;\n      this.loginService = loginService; //   miFormulario: FormGroup = this.fb.group({\n      //   email: ['', [Validators.required, Validators.pattern(this.ValidatorRegistroService.emailPattern)]],\n      //   password: ['', [ Validators.required]  ],\n      // })\n      // solucion: string = \"\";\n      // get emailErrorMsg(): string {\n      //   const errors = this.miFormulario.get('email')?.errors!;\n      //   if ( errors['required'] ) {\n      //     return 'Email es obligatorio';\n      //   } else if ( errors['pattern'] ) {\n      //     return 'El valor ingresado no tiene formato de correo';\n      //   }\n      //   return '';\n      // }\n      //   constructor( private fb: FormBuilder,\n      //     private ValidatorRegistroService: ValidatorRegistroService,\n      //     private loginService: LoginService,\n      //     private router: Router ) { }\n      // ngOnInit(): void {\n      //   this.miFormulario.reset({\n      //     email: '',\n      //     password: ''\n      //   })\n      // }\n      // campoNoValido( campo: string ) {\n      //   return this.miFormulario.get(campo)?.invalid\n      //           && this.miFormulario.get(campo)?.touched;\n      // }\n      // submitFormulario() {\n      //   this.login()\n      //   this.miFormulario.markAllAsTouched();\n      // }\n      // comprobarRespuestaLogin(){\n      //   if(this.solucion == \"true\"){\n      //   }\n      //   else if(this.solucion == \"incorrect\"){\n      //   }\n      //   else{\n      //   }\n      // }\n\n      /**\n       * Este metodo llamara al metodo de login de loginService y realizará una petición a la API, pasandole un objeto usuario con el email y la pass\n       * que ha introducido, en caso de que esas credenciales sean válidas se almacenará el token en el localStorage, de no ser así se llamará a un método\n       * para indicar que los datos introducidos no son correctos\n       */\n      //     login(){\n      //       let solucion: string;\n      //       let respuesta: LoginRespuesta = {};\n      //       this.loginService.login(this.miFormulario.get(\"email\")?.value, this.miFormulario.get(\"password\")?.value).subscribe({\n      //         next: resp => {\n      //           respuesta = resp;\n      //           if(respuesta.jwt_token != null){\n      //             localStorage.setItem('jwt', respuesta.jwt_token);\n      //             this.router.navigate(['home']);\n      //             solucion = \"true\";\n      //           }\n      //         },\n      //         error(error){\n      //           solucion = \"error\";\n      //           localStorage.removeItem('jwt');\n      //           Swal.fire({\n      //             title: 'Error al inciar sesión',\n      //             text: 'Los datos introducidos no son correctos',\n      //             icon: 'error',\n      //             confirmButtonText: 'Ok'\n      //           })\n      //         }\n      //       })\n      // }\n\n      this.datosCorrectos = false;\n      this.emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\";\n      this.initForm = {\n        email: \"\",\n        password: \"\"\n      };\n    }\n\n    ngOnInit() {}\n\n    emailValido() {\n      var _a, _b, _c, _d;\n\n      return ((_b = (_a = this.miFormulario) === null || _a === void 0 ? void 0 : _a.controls['email']) === null || _b === void 0 ? void 0 : _b.touched) && ((_d = (_c = this.miFormulario) === null || _c === void 0 ? void 0 : _c.controls['email']) === null || _d === void 0 ? void 0 : _d.invalid);\n    }\n\n    passValido() {\n      var _a, _b, _c, _d;\n\n      return ((_b = (_a = this.miFormulario) === null || _a === void 0 ? void 0 : _a.controls['password']) === null || _b === void 0 ? void 0 : _b.touched) && ((_d = (_c = this.miFormulario) === null || _c === void 0 ? void 0 : _c.controls['password']) === null || _d === void 0 ? void 0 : _d.invalid);\n    }\n\n    submitFormulario() {\n      if (this.miFormulario.valid) {\n        this.login();\n      }\n    }\n\n    login() {\n      let solucion;\n      let respuesta = {};\n      let email = this.miFormulario.value.email;\n      let password = this.miFormulario.value.password;\n      this.loginService.login(email, password).subscribe({\n        next: resp => {\n          respuesta = resp;\n\n          if (respuesta.jwt_token != null) {\n            localStorage.setItem('jwt', respuesta.jwt_token);\n            this.router.navigate(['home']);\n            solucion = \"true\";\n          }\n        },\n\n        error(error) {\n          solucion = \"error\";\n          localStorage.removeItem('jwt');\n          Swal.fire({\n            title: 'Error al inciar sesión',\n            text: 'Los datos introducidos no son correctos',\n            icon: 'error',\n            confirmButtonText: 'Ok'\n          });\n        }\n\n      });\n    }\n\n    camposVacios() {\n      if (this.miFormulario.value.email == \"\" && this.miFormulario.value.password == \"\") {\n        this.datosCorrectos = true;\n      }\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.LoginService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    viewQuery: function LoginComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.miFormulario = _t.first);\n      }\n    },\n    decls: 31,\n    vars: 8,\n    consts: [[1, \"vh-75\"], [1, \"container\", \"py-1\", \"h-75\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-75\"], [1, \"col-12\", \"col-md-8\", \"col-lg-6\", \"col-xl-5\"], [1, \"card\", \"shadow-2-strong\", \"border-3\", 2, \"border-radius\", \"1rem\"], [1, \"card-body\", \"p-5\", \"pt-3\", \"text-center\"], [1, \"mb-3\", \"mt-0\", \"pt-0\"], [\"autocomplete\", \"off\", 3, \"ngSubmit\"], [\"miFormulario\", \"ngForm\"], [1, \"form-outline\", \"mb-4\"], [\"type\", \"email\", \"placeholder\", \"Introduce tu email\", \"required\", \"\", \"id\", \"email\", \"name\", \"email\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"pattern\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"type\", \"password\", \"placeholder\", \"Introduce tu contrase\\u00F1a\", \"required\", \"\", \"id\", \"password\", \"name\", \"password\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\"], [1, \"text-center\", \"mb-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-lg\", \"btn-block\"], [1, \"mt-1\"], [3, \"routerLink\"], [1, \"my-4\"], [1, \"d-grid\", \"gap-2\"], [\"type\", \"submit\", \"disabled\", \"\", 1, \"btn\", \"btn-primary\", 2, \"background-color\", \"#dd4b39\"], [1, \"bi\", \"bi-google\", \"pe-1\"], [\"type\", \"submit\", \"disabled\", \"\", 1, \"btn\", \"btn-primary\", \"mb-2\", 2, \"background-color\", \"#3b5998\"], [1, \"bi\", \"bi-facebook\", \"pe-1\"], [1, \"form-text\", \"text-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"h2\", 6);\n        i0.ɵɵtext(7, \"\\u00A1Bienvenido de nuevo!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"form\", 7, 8);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.submitFormulario();\n        });\n        i0.ɵɵelementStart(10, \"div\", 9);\n        i0.ɵɵelement(11, \"input\", 10);\n        i0.ɵɵtemplate(12, LoginComponent_span_12_Template, 2, 0, \"span\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 9);\n        i0.ɵɵelement(14, \"input\", 12);\n        i0.ɵɵtemplate(15, LoginComponent_span_15_Template, 2, 0, \"span\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 13);\n        i0.ɵɵtemplate(17, LoginComponent_span_17_Template, 2, 0, \"span\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 14);\n        i0.ɵɵtext(19, \"Iniciar sesi\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 15);\n        i0.ɵɵelementStart(21, \"a\", 16);\n        i0.ɵɵtext(22, \"Reg\\u00EDstrate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"hr\", 17);\n        i0.ɵɵelementStart(24, \"div\", 18);\n        i0.ɵɵelementStart(25, \"button\", 19);\n        i0.ɵɵelement(26, \"i\", 20);\n        i0.ɵɵtext(27, \"Registrate con google\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"button\", 21);\n        i0.ɵɵelement(29, \"i\", 22);\n        i0.ɵɵtext(30, \"Registrate con facebook\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.initForm.email)(\"pattern\", ctx.emailPattern);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.emailValido());\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.initForm.password);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.passValido());\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.datosCorrectos);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(7, _c1));\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.RequiredValidator, i3.NgControlStatus, i3.NgModel, i3.PatternValidator, i4.NgIf, i1.RouterLinkWithHref],\n    styles: [\"\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}